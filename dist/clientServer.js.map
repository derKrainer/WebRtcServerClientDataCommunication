{"version":3,"file":"clientServer.js","mappings":"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","sources":["webpack://webrtcmessagebroker/./src/WebRtcClient.ts","webpack://webrtcmessagebroker/./src/WebRtcServer.ts","webpack://webrtcmessagebroker/webpack/bootstrap","webpack://webrtcmessagebroker/webpack/runtime/define property getters","webpack://webrtcmessagebroker/webpack/runtime/hasOwnProperty shorthand","webpack://webrtcmessagebroker/webpack/runtime/make namespace object","webpack://webrtcmessagebroker/./src/serverClient.ts"],"sourcesContent":["// import Peer, { DataConnection } from \"peerjs\";\ndeclare type Peer = any;\ndeclare var Peer: Peer;\ntype DataConnection = any;\n\nexport class WebRtcClient {\n  private connection: DataConnection;\n  private peer: Peer;\n  private lastTargetPeerId: string;\n\n  constructor(private onMessage: (data: unknown) => void, private onPeerOpen = (peerId: string) => { }) {\n    this.peer = new Peer({ debug: 2 });\n    this.initPeer();\n  }\n\n  initPeer() {\n    this.peer.on('open', (id) => {\n      // Workaround for peer.reconnect deleting previous id\n      if (this.peer.id === null) {\n        console.log('Received null id from peer open');\n      } else {\n        console.log('ID: ' + this.peer.id);\n      }\n      this.onPeerOpen(this.peer.id);\n    });\n    this.peer.on('connection', (c) => {\n      // Disallow incoming connections\n      c.on('open', function () {\n        c.send(\"Sender does not accept incoming connections\");\n        setTimeout(function () { c.close(); }, 500);\n      });\n    });\n    this.peer.on('disconnected', () => {\n      console.warn(\"Connection lost. Please reconnect\");\n      this.peer.connect(this.lastTargetPeerId);\n    });\n  }\n\n  connect(targetPeerId: string) {\n    this.lastTargetPeerId = targetPeerId;\n    if (this.connection) {\n      console.log('closing previous connection')\n      this.connection.close();\n    }\n    console.log('connecting to ' + targetPeerId);\n    this.connection = this.peer.connect(targetPeerId, { reliable: true });\n    this.connection.on('open', () => {\n      console.log(\"Connected to: \" + this.connection.peer);\n    });\n    this.connection.on('data', this.onMessage);\n  }\n\n  destroy() {\n    this.connection.close();\n    this.peer.destroy();\n  }\n}","// import Peer, { DataConnection } from \"peerjs\";\ndeclare var Peer: any;\ntype DataConnection = any;\n\nexport class WebRtcMessageServer {\n\n  private peerId: string;\n  private openConnections: DataConnection[] = [];\n\n  constructor(onIdAvailable?: (id: string) => void) {\n    const peer = new Peer({ debug: 2 });\n    peer.on('open', id => {\n      if (id != null) {\n        this.peerId = id;\n        console.log('Peer open. ', { paramId: id, peerId: peer.id });\n        if (onIdAvailable) {\n          onIdAvailable(id);\n        }\n      }\n    });\n    peer.on('connection', this.onConnection);\n    peer.on('disconnected', this.onDisconnect);\n  }\n\n  public getPeerId() {\n    return this.peerId;\n  }\n\n  private onConnection = (con: DataConnection) => {\n    console.log('A connection has been received. isOpen: ' + con.open);\n    if (con && con.open) {\n      this.openConnections.push(con);\n    } else if (con) {\n      const addToOpen = () => {\n        console.log('Connection went to state open, adding now');\n        con.off('open', addToOpen);\n        this.openConnections.push(con);\n      }\n      con.on('open', addToOpen);\n    } else {\n      console.warn('Received an invalid connection', con?.open)\n    }\n  }\n\n  private onDisconnect = (disco) => {\n    console.error('Disconnect, TODO figure out how to identify the correct open connection to splice', disco);\n  }\n\n  public send(message: string | Object) {\n    this.openConnections.forEach(con => {\n      try {\n        console.debug(`Sending to ${con.connectionId}:`, message);\n        con.send(message);\n      } catch (err) {\n        console.error('Error during sending to ' + con.connectionId, err);\n      }\n    })\n  }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { WebRtcClient } from \"./WebRtcClient\";\nimport { WebRtcMessageServer } from \"./WebRtcServer\";\n\ninterface ServerMessage {\n  timestamp: number;\n  message: string;\n}\nconst PEER_ID_PARAM = 'peerId';\nconst isServer = location.search === '' || !location.search.includes(PEER_ID_PARAM);\n\nwindow.addEventListener('load', () => {\n\n  if (isServer) {\n    document.getElementById('clientPart').style.display = 'none';\n\n    const server = new WebRtcMessageServer(peerId => {\n      console.log('Peer is available', peerId);\n      const paramSeparator = location.search === '' ? '?' : '&';\n      const newLocation = location.href + `${paramSeparator}${PEER_ID_PARAM}=${peerId}`;\n      history.pushState({ path: newLocation }, '', newLocation);\n    });\n\n    const input = document.getElementById('message') as HTMLInputElement;\n    const sendButton = document.getElementById('sendButton') as HTMLButtonElement;\n\n    const sendMessage = () => {\n      server.send({\n        timestamp: Date.now(),\n        message: input.value,\n      })\n      console.log('Sending message: ' + input.value);\n    }\n\n    sendButton.onclick = sendMessage;\n    input.onkeyup = (keyEvent) => {\n      if (keyEvent.key === 'Enter') {\n        sendMessage();\n      }\n    };\n  } else {\n    // client code\n    document.getElementById('serverPart').style.display = 'none';\n    const container = document.getElementById('logContainer');\n\n    function getPeerIdFromQueryParams() {\n      let from = location.search.indexOf(PEER_ID_PARAM);\n      if (from < 0) {\n        throw 'No peer id in query params, we should be server';\n      }\n      from += PEER_ID_PARAM.length + 1;\n      let to = location.search.indexOf('&', from)\n      if (to < 0) {\n        to = location.search.length;\n      }\n      const peerID = location.search.substring(from, to);\n      console.log('Extracted peerId: ' + peerID)\n      return peerID;\n    }\n\n    function createLogContainer(messages: string[]) {\n      const target = document.createElement('div');\n      target.classList.add('logEntry');\n      target.style.display = 'flex';\n      target.style.justifyContent = 'space-evenly'\n      container.insertBefore(target, container.children[1]);\n\n      messages.forEach(msg => {\n        const timestampContainer = document.createElement('div');\n        timestampContainer.innerText = String(msg);\n        target.appendChild(timestampContainer);\n      })\n\n      return target;\n    }\n\n    function createLog(message: ServerMessage) {\n      console.log('Received message from server', message);\n\n      createLogContainer([String(message.timestamp), message.message]);\n    }\n    const serverPeerId = getPeerIdFromQueryParams();\n    createLogContainer(['Timestamp', 'Message']);\n\n    const client = new WebRtcClient(createLog, () => { client.connect(serverPeerId) });\n    (window as any).client = client;\n  }\n});"],"names":[],"sourceRoot":""}