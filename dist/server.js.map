{"version":3,"file":"server.js","mappings":"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","sources":["webpack://webrtcmessagebroker/./src/WebRtcServer.ts","webpack://webrtcmessagebroker/webpack/bootstrap","webpack://webrtcmessagebroker/webpack/runtime/define property getters","webpack://webrtcmessagebroker/webpack/runtime/hasOwnProperty shorthand","webpack://webrtcmessagebroker/webpack/runtime/make namespace object","webpack://webrtcmessagebroker/./src/server.ts"],"sourcesContent":["// import Peer, { DataConnection } from \"peerjs\";\ndeclare var Peer: any;\ntype DataConnection = any;\n\nexport class WebRtcMessageServer {\n\n  private peerId: string;\n  private openConnections: DataConnection[] = [];\n\n  constructor(onIdAvailable?: (id: string) => void) {\n    const peer = new Peer({ debug: 2 });\n    peer.on('open', id => {\n      if (id != null) {\n        this.peerId = id;\n        console.log('Peer open. ', { paramId: id, peerId: peer.id });\n        if (onIdAvailable) {\n          onIdAvailable(id);\n        }\n      }\n    });\n    peer.on('connection', this.onConnection);\n    peer.on('disconnected', this.onDisconnect);\n  }\n\n  public getPeerId() {\n    return this.peerId;\n  }\n\n  private onConnection = (con: DataConnection) => {\n    console.log('A connection has been received. isOpen: ' + con.open);\n    if (con && con.open) {\n      this.openConnections.push(con);\n    } else if (con) {\n      const addToOpen = () => {\n        console.log('Connection went to state open, adding now');\n        con.off('open', addToOpen);\n        this.openConnections.push(con);\n      }\n      con.on('open', addToOpen);\n    } else {\n      console.warn('Received an invalid connection', con?.open)\n    }\n  }\n\n  private onDisconnect = (disco) => {\n    console.error('Disconnect, TODO figure out how to identify the correct open connection to splice', disco);\n  }\n\n  public send(message: string | Object) {\n    this.openConnections.forEach(con => {\n      try {\n        console.debug(`Sending to ${con.connectionId}:`, message);\n        con.send(message);\n      } catch (err) {\n        console.error('Error during sending to ' + con.connectionId, err);\n      }\n    })\n  }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { WebRtcMessageServer } from \"./WebRtcServer\";\n\nwindow.addEventListener('load', () => {\n  const server = new WebRtcMessageServer(peerId => {\n    document.getElementById('peerId').innerText = 'Server ID:' + peerId;\n  });\n\n  const input = document.getElementById('message') as HTMLInputElement;\n\n  input.onchange = () => {\n    console.log('sending ' + input.value)\n    server.send({\n      timestamp: Date.now(),\n      message: input.value,\n    });\n  };\n});"],"names":[],"sourceRoot":""}